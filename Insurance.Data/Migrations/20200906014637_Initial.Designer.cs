// <auto-generated />
using System;
using Insurance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Insurance.Data.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20200906014637_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Insurance.Domain.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1L,
                            Name = "Bob"
                        },
                        new
                        {
                            CustomerId = 2L,
                            Name = "Jhon"
                        });
                });

            modelBuilder.Entity("Insurance.Domain.Policy", b =>
                {
                    b.Property<long>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoveragePercentage")
                        .HasColumnType("int");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartOfValidity")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfCovering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfRisk")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Policies");

                    b.HasData(
                        new
                        {
                            PolicyId = 1L,
                            CoveragePercentage = 100,
                            CustomerId = 1L,
                            Name = "Poliza Contra Incendio",
                            Period = 12,
                            Price = 1000000f,
                            StartOfValidity = new DateTime(2020, 9, 7, 20, 46, 37, 334, DateTimeKind.Local).AddTicks(742),
                            TypeOfCovering = "Incendio",
                            TypeOfRisk = "Bajo"
                        },
                        new
                        {
                            PolicyId = 2L,
                            CoveragePercentage = 100,
                            CustomerId = 2L,
                            Name = "Poliza Contra Robo",
                            Period = 12,
                            Price = 1000000f,
                            StartOfValidity = new DateTime(2020, 9, 10, 20, 46, 37, 335, DateTimeKind.Local).AddTicks(2313),
                            TypeOfCovering = "Robo",
                            TypeOfRisk = "Medio-Alto"
                        });
                });

            modelBuilder.Entity("Insurance.Domain.Policy", b =>
                {
                    b.HasOne("Insurance.Domain.Customer", null)
                        .WithMany("Policies")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
